org: bitsofprocess
v org: bitsofprocess
app: aws-api
service: aws-api
frameworkVersion: '2 || 3'
plugins:
  - serverless-offline
  - serverless-dynamodb-local

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    DYNAMODB_TABLE: "params-${sls:stage}"
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

layers:
  lodash:
    path: layer
    compatibleRuntimes:
      - nodejs12.x

functions:
  promoteddb:
    handler: promoteddb.run
    layers:
      - !Ref LodashLambdaLayer
    events:
      - httpApi:
          path: /promoteddb/{sourceStage}/{destStage}
          method: get

  # refactored:
  #   handler: refactored.run
  #   layers:
  #     - !Ref LodashLambdaLayer
  #   events:
  #     - httpApi:
  #         path: /refactored/{sourceStage}/{destStage}
  #         method: get

  # create:
  #   handler: todos/create.create
  #   events:
  #     - httpApi:
  #         path: /todos
  #         method: post

  # list:
  #   handler: todos/list.list
  #   events:
  #     - httpApi:
  #         path: /todos
  #         method: get

  # get:
  #   handler: todos/get.get
  #   events:
  #     - httpApi:
  #         path: /todos/{id}
  #         method: get

  # update:
  #   handler: todos/update.update
  #   events:
  #     - httpApi:
  #         path: /todos/{id}
  #         method: put

  # delete:
  #   handler: todos/delete.delete
  #   events:
  #     - httpApi:
  #         path: /todos/{id}
  #         method: delete

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: parameter_set
            AttributeType: S
        KeySchema:
          -
            AttributeName: parameter_set
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}